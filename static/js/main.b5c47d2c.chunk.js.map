{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","App.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","Propypes","PropTypes","node","addContacts","createAction","payload","name","number","id","shortid","generate","deleteContacts","changeFilter","ContactForm","useState","setName","setNumber","dispatch","useDispatch","hendleChange","event","currentTarget","value","reset","contactForm","onSubmit","preventDefault","alert","formLabel","formInput","type","pattern","title","required","onChange","formButton","getFilter","state","contacts","filter","getVisibleContacts","allContacts","items","getContacts","normalizedFilter","toLowerCase","contact","includes","ContactList","useSelector","contactsWrapper","map","contactButton","onClick","Filter","filterWrapper","filterLabel","filterInput","e","target","App","appTitle","itemsReducer","createReducer","find","item","filterReducer","_","combineReducers","contactsPersistConfig","key","storage","blscklist","rootReducer","persistReducer","contactsReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b5c47d2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3OaZ9\",\"filterLabel\":\"Filter_filterLabel__1UTsR\",\"filterInput\":\"Filter_filterInput__1r4n6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsWrapper\":\"ContactsList_contactsWrapper__z_i1F\",\"contactButton\":\"ContactsList_contactButton__1pcVJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appTitle\":\"App_appTitle__W163f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2l8PR\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.Propypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContacts = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: { name, number, id: shortid.generate() },\r\n}));\r\n\r\nexport const deleteContacts = createAction(\"contacts/delete\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContacts } from \"../../redux/contacts/contacts-actions\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const hendleChange = (event) => {\n    if (event.currentTarget.name === \"name\") {\n      setName(event.currentTarget.value);\n    }\n    if (event.currentTarget.name === \"number\") {\n      setNumber(event.currentTarget.value);\n    }\n  };\n\n  const hendleSubmit = (event) => {\n    event.preventDefault();\n    if (name === \"\") {\n      return alert(\"Заполните  поле\");\n    }\n\n    dispatch(addContacts({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.contactForm} onSubmit={hendleSubmit}>\n      <label className={s.formLabel}>\n        Name\n        <input\n          className={s.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={hendleChange}\n        />\n      </label>\n      <label className={s.formLabel}>\n        <span>Number</span>\n        <input\n          className={s.formInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={hendleChange}\n        />\n      </label>\n\n      <button className={s.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../redux/contacts/contacts-actions\";\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = (contactId) => dispatch(deleteContacts(contactId));\n\n  return (\n    <div className={s.contactsWrapper}>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={shortid.generate()}>\n            <span>{name}: </span>\n            <span>{number}</span>\n            <button\n              className={s.contactButton}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className={s.filterWrapper}>\n      <label className={s.filterLabel}>\n        Find contacts by name\n        <input\n          className={s.filterInput}\n          type=\"text\"\n          value={value}\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <Container>\n      <h1 className={s.appTitle}>Phonebook</h1>\n      <ContactForm />\n\n      <h2 className={s.appTitle}>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { deleteContacts, addContacts, changeFilter } from \"./contacts-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addContacts]: (state, { payload }) => {\r\n    if (state.find(({ name }) => name === payload.name)) {\r\n      alert(`${payload.name} is alreadi in contacts`);\r\n      return state;\r\n    }\r\n    return [...state, payload];\r\n  },\r\n\r\n  [deleteContacts]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blscklist: [\"filter\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    logger,\r\n  ],\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3waER\",\"formLabel\":\"ContactForm_formLabel__3EE77\",\"formInput\":\"ContactForm_formInput__1qfJz\",\"formButton\":\"ContactForm_formButton__MXwRG\"};"],"sourceRoot":""}